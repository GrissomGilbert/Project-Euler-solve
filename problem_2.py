'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
import math
from time import time

def fib_formu(n):
    return int((1/math.sqrt(5))*(math.pow((1+math.sqrt(5))/2, n)-math.pow((1-math.sqrt(5))/2, n)))

def get_sum():
    sum=0
    maxmum=4000000
    for num in range(1,1000):
        if(sum<=maxmum):
            cal=fib_formu(num)
            if(cal%2==0):
                sum+=cal
    return sum
if __name__=='__main__':
    cal_time=time()
    print("the sum of the even-valued terms is %d"%get_sum())
    print("calculation time is %f"%(time()-cal_time))

